/**
 * @fileoverview This file contains the React component responsible for rendering a single Instagram embed.
 * It manages the dynamic loading of the required external Instagram `embed.js` script.
 */

import React, { useEffect, useRef } from 'react';

/**
 * This global declaration is necessary to inform TypeScript about the `instgrm` object
 * that is added to the `window` by the external Instagram `embed.js` script.
 */
declare global {
  interface Window {
    instgrm?: {
      Embeds: {
        process: () => void;
      };
    };
  }
}

/**
 * Renders a single Instagram post embed. It creates the required `<blockquote>` structure
 * and ensures that the necessary Instagram `embed.js` script is loaded and executed.
 * @param {object} props - The component's properties.
 * @param {string} props.src - The full URL of the Instagram post to be embedded.
 * @returns {JSX.Element} The rendered Instagram blockquote element.
 */
export const InstagramEmbed = ({ src }: { src: string }) => {
  const blockquoteRef = useRef<HTMLQuoteElement>(null);

  /**
   * The `utm_source=ig_embed` is a functional parameter, not for analytics.
   * Instagram's `embed.js` script uses it to render a fully interactive
   * video player rather than a static, redirecting preview.
   */
  const url = new URL(src);
  url.searchParams.set('utm_source', 'ig_embed');
  const finalUrl = url.toString();


  /**
   * This useEffect hook handles the dynamic loading and processing of the Instagram embed.
   * It is designed to be resilient to race conditions between React's rendering and the
   * external script's execution.
   */
  useEffect(() => {
    /**
     * Loads the Instagram `embed.js` script and triggers the processing of the embed.
     */
    const loadAndProcess = () => {
      // Step 1: Check if the blockquote element has been rendered to the DOM.
      // If not, we can't proceed. This check is the key to avoiding the race condition.
      if (!blockquoteRef.current) {
        console.warn('[InstagramEmbed] Blockquote ref not yet available. Aborting process for now.');
        return;
      }

      const scriptId = 'instagram-embed-script';
      
      // Step 2: Check if the Instagram script is already on the page.
      if (document.getElementById(scriptId)) {
        // If the script is loaded, and the `instgrm` object is available, process the embeds.
        if (window.instgrm) {
          console.log('[InstagramEmbed] Script already loaded. Processing embeds.');
          window.instgrm.Embeds.process();
        }
        return;
      }

      // Step 3: If the script is not on the page, create and append it.
      const script = document.createElement('script');
      script.id = scriptId;
      script.async = true;
      script.src = "https://www.instagram.com/embed.js";
      
      // Step 4: Define the onload callback to process embeds once the script is ready.
      script.onload = () => {
        if (window.instgrm) {
          console.log('[InstagramEmbed] Script newly loaded. Processing embeds.');
          window.instgrm.Embeds.process();
        }
      };
      
      document.body.appendChild(script);
    };

    loadAndProcess();

  }, [src]); // Re-run this effect if the `src` prop changes.

  return (
    <div className="not-prose">
      <blockquote
        ref={blockquoteRef}
        className="instagram-media"
        data-instgrm-permalink={finalUrl}
        data-instgrm-version="14"
        style={{
          background: '#FFF',
          border: '1px solid #dbdbdb',
          borderRadius: '3px',
          boxShadow: 'none',
          display: 'block',
          margin: '1rem auto',
          padding: '0',
          width: '100%',
          maxWidth: '540px', // Constrain the max width for larger screens
        }}
      >
        <div style={{ padding: '16px' }}>
          <a
            href={finalUrl}
            style={{
              background: '#FFFFFF',
              lineHeight: 0,
              padding: '0 0',
              textAlign: 'center',
              textDecoration: 'none',
              width: '100%'
            }}
            target="_blank"
            rel="noopener noreferrer"
          >
            {/* The content inside the anchor is generated by the Instagram script. */}
          </a>
        </div>
      </blockquote>
    </div>
  );
};
