name: Website-triggered Bug Issue

on:
  repository_dispatch:
    types: [website-bug-issue]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  create-issue-and-tag-gemini:
    runs-on: ubuntu-latest
    steps:
      - name: Create Issue
        id: issue
        uses: actions/github-script@v7
        with:
          script: |
            const title = context.payload.client_payload?.title ?? 'Bug report from website';
            const body = context.payload.client_payload?.description ?? '';
            const { data: issue } = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title,
              body: `Requested by website admin via automation.\n\n---\n\n${body}`,
              labels: ['from-web', 'auto-implement']
            });
            core.setOutput('number', issue.number.toString());

      - name: Ask Gemini to implement from Issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PR_AUTOMATION_TOKEN }}
          script: |
            const issue_number = Number(process.env.ISSUE_NUMBER);
            const description = process.env.DESCRIPTION || '';
            const branch = `auto/issue-${issue_number}`;
            const prompt = [
              '/implement',
              'Please implement the following request from this Issue.',
              '',
              'Steps:',
              `- Create and work on branch: ${branch} from base: main`,
              '- Make the required code changes, commit, and push to the branch',
              `- Open a Pull Request to main referencing this Issue #${issue_number}`,
              '',
              'Request body:',
              '---',
              description
            ].join('\n');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number,
              body: prompt,
            });
        env:
          ISSUE_NUMBER: ${{ steps.issue.outputs.number }}
          DESCRIPTION: ${{ github.event.client_payload.description }}


