name: Website-triggered Bug PR

on:
  repository_dispatch:
    types: [website-bug-report]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  create-pr-and-request-gemini:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout default branch
        uses: actions/checkout@v4

      - name: Prepare branch and empty commit
        id: prep
        env:
          BRANCH_NAME: auto/bugfix-${{ github.run_id }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git switch -c "$BRANCH_NAME"
          # Create an empty commit so PR can be opened even without file diffs
          git commit --allow-empty -m "chore: init bugfix PR - ${{ github.event.client_payload.title }}"
          git push origin "$BRANCH_NAME"
          echo "branch=$BRANCH_NAME" >> "$GITHUB_OUTPUT"

      - name: Open PR (REST)
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const head = process.env.HEAD_REF;
            const base = process.env.BASE_REF || 'main';
            const title = `Bug: ${context.payload.client_payload.title}`;
            const body = `Requested by website admin via automation.\n\n---\n\n${context.payload.client_payload.description}`;
            const { data: pr } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title,
              head,
              base,
              body,
              maintainer_can_modify: true,
            });
            core.setOutput('number', pr.number.toString());
          result-encoding: string
        env:
          HEAD_REF: ${{ steps.prep.outputs.branch }}
          BASE_REF: main

      - name: Post request to Gemini CLI in PR comments
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = Number(process.env.PR_NUMBER);
            const description = process.env.REQUEST_BODY || '';
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: `@gemini-cli Please implement the following request from the admin panel.\n\n---\n\n${description}`
            });
          result-encoding: string
        env:
          PR_NUMBER: ${{ steps.pr.outputs.number }}
          REQUEST_BODY: ${{ github.event.client_payload.description }}

