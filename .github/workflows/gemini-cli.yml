name: Gemini CLI (general assistant)

on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  run-gemini-cli:
    # Trigger only on explicit /gemini commands to avoid duplicate runs with other workflows
    if: github.event.issue != null && contains(github.event.comment.body, '/gemini')
    runs-on: ubuntu-latest
    steps:
      - name: Extract context and prompt
        id: info
        uses: actions/github-script@v7
        with:
          script: |
            const isPR = !!context.payload.issue.pull_request;
            let headRef = '';
            let headRepo = '';
            if (isPR) {
              const pr = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.issue.number,
              });
              headRef = pr.data.head.ref;
              headRepo = pr.data.head.repo.full_name;
            }
            const raw = (context.payload.comment.body || '').trim();
            let cleaned = raw;
            cleaned = cleaned.replace(/^@gemini-cli\s*/i, '');
            cleaned = cleaned.replace(/^\/gemini\s*/i, '');
            core.setOutput('is_pr', String(isPR));
            core.setOutput('head_ref', headRef || 'main');
            core.setOutput('head_repo', headRepo || `${context.repo.owner}/${context.repo.repo}`);
            core.setOutput('prompt', cleaned);

      - name: Checkout target
        uses: actions/checkout@v4
        with:
          repository: ${{ steps.info.outputs.head_repo }}
          ref: ${{ steps.info.outputs.head_ref }}
          fetch-depth: 0
          persist-credentials: false

      - name: Auth GH for pushes
        run: |
          gh auth setup-git
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
        env:
          GH_TOKEN: ${{ secrets.PR_AUTOMATION_TOKEN }}

      - name: Run Gemini CLI with prompt
        id: gemini
        uses: google-github-actions/run-gemini-cli@v0.1.10
        with:
          prompt: ${{ steps.info.outputs.prompt }}
          gemini_api_key: ${{ secrets.GEMINI_API_KEY }}
        env:
          GH_TOKEN: ${{ secrets.PR_AUTOMATION_TOKEN }}

      - name: Comment summary
        if: always()
        uses: actions/github-script@v7
        env:
          SUMMARY: ${{ steps.gemini.outputs.summary }}
        with:
          script: |
            const summary = process.env.SUMMARY || '';
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body: summary ? `Gemini summary:\n\n${summary}` : 'Gemini run completed.'
            });
          result-encoding: string


